
name: Build,Test and deploy Python project to Azure Function App

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - staging
    types: [closed]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'example-python-crud' # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.11' # set this to the python version to use (supports 3.6, 3.7, 3.8)
  DOCKER_TAG: 'v1.0.0'

jobs:
  test: #test job
    name: üî¨ü©∫üî¨ Automation test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      - name: 'Install Project Dependencies Using Pip'
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Unit Testing with pytest
        shell: bash
        run: |
          pytest
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            !venv/
 

  docker-build: #build job
    name: üê≥üê≥üê≥ Docker build and push
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}:${{ env.DOCKER_TAG }} #latest

  deploy: #deploy job
    name: üöÄüöÄüöÄ Deploy image on azure container app
    needs: docker-build
    if: github.event.pull_request.merged == true && github.ref == 'refs/heads/staging' && needs.docker-build.outputs.result == 'success'
    runs-on: ubuntu-latest
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-function.outputs.webapp-url }}

    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          registryUrl: docker.io
          registryUsername: ${{ secrets.DOCKERHUB_USERNAME }}
          registryPassword: ${{ secrets.DOCKERHUB_TOKEN }}
          containerAppName: staging-example-python-crud
          resourceGroup: DefaultResourceGroup-EUS
          targetPort: 8000
          imageToDeploy: dyronrh/example-python-crud:v1.0.0
  notify:
    needs: [test, docker-build,deploy]
    name: Notify to slack
    if: always()
    uses: ./.github/workflows/_slack-notification.yml
    secrets: inherit
    with:
      test_status: ${{ needs.test.result }}
      build_status: ${{ needs.docker-build.result }}
      deploy_status: ${{ needs.deploy.result }}

